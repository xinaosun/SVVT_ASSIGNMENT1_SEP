package SocialNetwork;

import java.util.Collection;
import java.util.HashSet;
import java.util.Set;



public class AccountDAOFake implements IAccountDAO {
	/*
	 * A full in-memory fake of AccountDAO.
	 * 
	 * IMPORTANT NOTE:
	 * If you wish to take advantage of the Account class for simulating the database,
	 * make sure that your storage representation relies on fully cloned objects, not just Account references passed.
	 * That is, it's not enough to store an in-memory reference to an Account object. 
	 * Tests should not be able to distinguish this object from a real DAO object connected to a real DB. 
	 * In that sense, this class is a bit more than a fake that works only with certain inputs. 
	 * It implements a full Account DOA simulator that will work with all test cases
	 * that need an AccountDAO as a collaborator. 
	 */
		
	
	
	/**
	 * 在AccountDAO中, 有一个load database的constructor和一个检查是否
	 * connected的method
	 * @return
	 */
	
	private Set<Account> accountsBase = new HashSet<Account>();

	public boolean isFullMock() {  // really, I should call this isFullFake()
		return true;
	}

	
	public void save(Account member) {
		// when somebody join the social network, DAO save the name of this user
		
		this.accountsBase.add(member);
		
	}

	
	public Account findByUserName(String userName)  {
		for(Account ac:accountsBase){
			if(ac.getUserName().equals(userName)){
				return ac;
			}
		}
		return null;
	}
	
	
	public Set<Account> findAll(){
		
			return this.accountsBase;
		
	}

	
	public void delete(Account member) {
		accountsBase.remove(this.findByUserName(member.getUserName()));
	}

	
	public void update(Account member) {
		for(Account ac:accountsBase){
			if(ac.getUserName().equals(member.getUserName())){
				ac.equals(member);
		}
	  }
	}
}
